name: GitHub CI Release

on:
  # pull_request:
  #   types: ["closed"]
  #   branches: ["main"]
  push:
    branches: ["feature**"]

jobs:
  release:
    name: Release Application
    runs-on: ubuntu-latest
    timeout-minutes: 30

    steps:
      - name: Checkout Repository ${{ github.event.repository.name }}
        uses: actions/checkout@v4
        with:
          fetch-depth: 0

      - name: Create Draft Release
        uses: actions/github-script@v7
        id: create_draft_release
        with:
          script: |
            const scriptPath = '${{ github.workspace }}/.github/scripts/create-draft-release.js';
            const { default: createDraftRelease } = await import(scriptPath);
            await createDraftRelease({ core, context, github });

      - name: Upload Release Asset
        uses: actions/github-script@v7
        id: upload_release_asset
        if: ${{ steps.create_draft_release.outputs.released == 'true' }}
        with:
          script: |
            const scriptPath = '${{ github.workspace }}/.github/scripts/upload-release-asset.js';
            const release = ${{ steps.create_draft_release.outputs }};
            const { default: uploadReleaseAsset } = await import(scriptPath);
            await uploadReleaseAsset({ core, context, github, release });

      - name: Publish Draft Release
        uses: actions/github-script@v7
        id: publish_draft_release
        if: ${{ steps.create_draft_release.outputs.released == 'true' }}
        with:
          script: |
            const scriptPath = '${{ github.workspace }}/.github/scripts/publish-draft-release.js';
            const release = ${{ steps.create_draft_release.outputs }};
            const { default: publishDraftRelease } = await import(scriptPath);
            await publishDraftRelease({ core, context, github, release });
