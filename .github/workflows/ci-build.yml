name: Node CI Build

on:
  pull_request:
    branches: ["main", "dev"]
  push:
    branches: ["feature**"]

jobs:
  code_quality:
    name: Check Code Quality
    runs-on: ubuntu-latest
    timeout-minutes: 30

    env:
      node_version: 20.x

    steps:
      - name: Checkout Repository ${{ github.event.repository.name }}
        uses: actions/checkout@v4
        with:
          fetch-depth: 0

      - name: Setup Node Version ${{ env.node_version }}
        uses: actions/setup-node@v4
        with:
          node-version: ${{ env.node_version }}
          cache: "npm"

      - name: Install Dependencies
        run: npm ci

      - name: Check Prettier Rules
        run: npm run format:check --if-present

      - name: Check ESLint Rules
        run: npm run lint --if-present

      - name: Check Sonarcloud Rules
        uses: SonarSource/sonarcloud-github-action@master
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
          SONAR_TOKEN: ${{ secrets.SONAR_TOKEN }}

  build:
    name: Build Application
    runs-on: ubuntu-latest
    timeout-minutes: 30

    strategy:
      fail-fast: false
      matrix:
        node_version: [16.x, 18.x, 20.x]

    steps:
      - name: Checkout Repository ${{ github.event.repository.name }}
        uses: actions/checkout@v4

      - name: Setup Node Version ${{ matrix.node_version }}
        uses: actions/setup-node@v4
        with:
          node-version: ${{ matrix.node_version }}
          cache: "npm"

      - name: Install Dependencies
        run: npm ci

      - name: Build Application
        run: npm run build --if-present

      - name: Application Version
        uses: actions/github-script@v7
        id: application_version
        with:
          script: |
            const pkg = require('./package.json');
            const core = require('@actions/core');

            core.info(pkg.version);

      - name: Upload Build Artifact
        uses: actions/upload-artifact@v4
        if: ${{ matrix.node_version == '20.x' }}
        with:
          name: ${{ github.event.repository.name }}
          path: dist

  test:
    name: Test Application
    runs-on: ubuntu-latest
    timeout-minutes: 30

    strategy:
      fail-fast: false
      matrix:
        node_version: [16.x, 18.x, 20.x]

    steps:
      - name: Checkout Repository ${{ github.event.repository.name }}
        uses: actions/checkout@v4

      - name: Setup Node Version ${{ matrix.node_version }}
        uses: actions/setup-node@v4
        with:
          node-version: ${{ matrix.node_version }}
          cache: "npm"

      - name: Install Dependencies
        run: npm ci

      - name: Test Application with Coverage Report
        run: npm run test:coverage --if-present

      - name: Publish Coverage Report
        uses: codecov/codecov-action@v3
        if: ${{ matrix.node_version == '20.x' }}
        env:
          CODECOV_TOKEN: ${{ secrets.CODECOV_TOKEN }}
