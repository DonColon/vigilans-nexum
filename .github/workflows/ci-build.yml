name: Node CI Build

on:
  pull_request:
    branches: ["main", "dev"]
  push:
    branches: ["feature**"]

jobs:
  code_quality:
    name: Check Code Quality
    runs-on: ubuntu-latest

    env:
      node_version: 18.x

    steps:
      - name: Checkout Repository ${{ github.event.repository.name }}
        uses: actions/checkout@v4
        with:
          fetch-depth: 0

      - name: Setup Node Version ${{ env.node_version }}
        uses: actions/setup-node@v4
        with:
          node-version: ${{ env.node_version }}
          cache: "npm"

      - name: Install Dependencies
        run: npm ci

      - name: Check Prettier Format
        run: npm run format:check --if-present

      - name: Check ESLint Rules
        run: npm run lint --if-present

      - name: SonarCloud Scan
        uses: SonarSource/sonarcloud-github-action@master
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}  # Needed to get PR information, if any
          SONAR_TOKEN: ${{ secrets.SONAR_TOKEN }}

  build:
    name: Build Application
    runs-on: windows-latest

    env:
      node_version: 18.x

    steps:
      - name: Checkout Repository ${{ github.event.repository.name }}
        uses: actions/checkout@v4

      - name: Setup Node Version ${{ env.node_version }}
        uses: actions/setup-node@v4
        with:
          node-version: ${{ env.node_version }}
          cache: "npm"

      - name: Install Dependencies
        run: npm ci

      - name: Build Application
        run: npm run build --if-present

      - name: Upload Build Artifact
        uses: actions/upload-artifact@v4
        with:
          name: ${{ github.event.repository.name }}-build
          path: dist

  test:
    name: Test Application
    runs-on: windows-latest

    env:
      node_version: 18.x

    steps:
      - name: Checkout Repository ${{ github.event.repository.name }}
        uses: actions/checkout@v4

      - name: Setup Node Version ${{ env.node_version }}
        uses: actions/setup-node@v4
        with:
          node-version: ${{ env.node_version }}
          cache: "npm"

      - name: Install Dependencies
        run: npm ci

      - name: Test Application with Coverage Report
        run: npm run test:coverage --if-present

      - name: Upload Coverage Report Artifact
        uses: actions/upload-pages-artifact@v3
        with:
          name: ${{ github.event.repository.name }}-coverage
          path: coverage

  deploy-coverage:
    name: Publish Test Coverage
    runs-on: windows-latest
    needs: test

    permissions:
      pages: write
      id-token: write

    environment:
      name: github-pages
      url: ${{ steps.deployment.outputs.page_url }}

    steps:
      - name: Deploy Test Coverage to Github Pages
        id: deployment
        uses: actions/deploy-pages@v4
        with:
          artifact_name: ${{ github.event.repository.name }}-coverage
