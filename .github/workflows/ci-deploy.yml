name: Netlify CI Deploy

on:
  # release:
  #   types: [published]
  push:
    branches: ["feature**"]

jobs:
  deploy:
    name: Deploy Application
    runs-on: ubuntu-latest
    timeout-minutes: 30

    env:
      node_version: 20.x
      netlify_version: 17.13.2

    environment:
      name: netlify
      url: ${{ steps.deploy_app.outputs.deploy_url }}

    steps:
      - name: Checkout Repository ${{ github.event.repository.name }}
        uses: actions/checkout@v4

      - name: Setup Node Version ${{ env.node_version }}
        uses: actions/setup-node@v4
        with:
          node-version: ${{ env.node_version }}
          cache: "npm"

      - name: Setup Netlify Version ${{ env.netlify_version }}
        run: |
          npm install -g netlify-cli@${{ env.netlify_version }}
          npm install decompress

      - name: Download Release Asset
        uses: actions/github-script@v7
        id: download_release_asset
        with:
          script: |
            const scriptPath = '${{ github.workspace }}/.github/scripts/download-release-asset.cjs';
            const { default: downloadReleaseAsset } = await import(scriptPath);
            await downloadReleaseAsset({ core, context, github });

      - name: Deploy Application
        uses: actions/github-script@v7
        id: deploy_app
        with:
          script: |
            const scriptPath = '${{ github.workspace }}/.github/scripts/deploy-app-netlify.js';
            const { default: deployApp } = await import(scriptPath);
            await deployApp({ core, context, github, exec });
